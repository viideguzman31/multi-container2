{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\docker-kub\\\\complex\\\\client\\\\src\\\\Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Fib extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      seenIndexes: [],\n      values: {},\n      index: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('/api/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n\n  async fetchValues() {\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  }\n\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/values/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(_ref => {\n      let {\n        number\n      } = _ref;\n      return number;\n    }).join(', ');\n  }\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"For index \", key, \" I calculated \", this.state.values[key]]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this));\n    }\n\n    return entries;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.index,\n          onChange: event => this.setState({\n            index: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Indexes Seen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), this.renderSeenIndexes(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculated Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this), this.renderValues()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Fib;","map":{"version":3,"sources":["C:/Users/user/Documents/docker-kub/complex/client/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","renderSeenIndexes","map","number","join","renderValues","entries","key","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACvBG,KADuB,GACjB;AACFC,MAAAA,WAAW,EAAE,EADX;AAEFC,MAAAA,MAAM,EAAE,EAFN;AAGFC,MAAAA,KAAK,EAAE;AAHL,KADiB;;AAAA,SAqCvBC,YArCuB,GAqCR,MAAOC,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAAyB;AAC3BJ,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADS,OAAzB,CAAN;AAGA,WAAKK,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KA3CsB;AAAA;;AAOvBM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,WAAL;AACA,SAAKC,YAAL;AACH;;AACgB,QAAXD,WAAW,GAAE;AACf,UAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACc,GAAN,CAAU,qBAAV,CAArB;AACA,SAAKJ,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAEA,MAAM,CAACW;AAAhB,KAAd;AACH;;AAEiB,QAAZF,YAAY,GAAE;AAChB,UAAMV,WAAW,GAAG,MAAMH,KAAK,CAACc,GAAN,CAAU,iBAAV,CAA1B;AACA,SAAKJ,QAAL,CAAc;AAACP,MAAAA,WAAW,EAAEA,WAAW,CAACY;AAA1B,KAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,WAAO,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAYA,MAAZ;AAAA,KAA3B,EAA+CC,IAA/C,CAAoD,IAApD,CAAP;AACH;;AAEDC,EAAAA,YAAY,GAAE;AACV,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAI,IAAIC,GAAR,IAAe,KAAKpB,KAAL,CAAWE,MAA1B,EAAiC;AAC7BiB,MAAAA,OAAO,CAACE,IAAR,eACI;AAAA,iCACWD,GADX,oBAC8B,KAAKpB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CAD9B;AAAA,SAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,WAAOD,OAAP;AACH;;AAUDG,EAAAA,MAAM,GAAG;AACL,wBACK;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAE,KAAKlB,YAAL,EAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KAAzB;AAAgC,UAAA,QAAQ,EAAEE,KAAK,IAAE,KAAKG,QAAL,CAAc;AAACL,YAAAA,KAAK,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAArB,WAAd;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOK,KAAKV,iBAAL,EAPL,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASK,KAAKI,YAAL,EATL;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAcH;;AA5DsB;;AA+D3B,eAAenB,GAAf","sourcesContent":["import React,{Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Fib extends Component{\r\n    state={\r\n        seenIndexes: [],\r\n        values: {},\r\n        index: ''\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.fetchValues()\r\n        this.fetchIndexes()\r\n    }\r\n    async fetchValues(){\r\n        const values = await axios.get('/api/values/current')\r\n        this.setState({values: values.data})\r\n    }\r\n\r\n    async fetchIndexes(){\r\n        const seenIndexes = await axios.get('/api/values/all')\r\n        this.setState({seenIndexes: seenIndexes.data})\r\n    }\r\n\r\n    renderSeenIndexes(){\r\n        return this.state.seenIndexes.map(({number})=>number).join(', ')\r\n    }\r\n\r\n    renderValues(){\r\n        const entries = [];\r\n        for(let key in this.state.values){\r\n            entries.push(\r\n                <div key={key}>\r\n                For index {key} I calculated {this.state.values[key]}\r\n                </div>\r\n            )\r\n        }\r\n        return entries;\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await axios.post('/api/values',{\r\n            index: this.state.index\r\n        })\r\n        this.setState({index: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div>\r\n                 <form onSubmit={this.handleSubmit()}>\r\n                     <label>Enter your index</label>\r\n                     <input value={this.state.index} onChange={event=>this.setState({index: event.target.value})}/>\r\n                     <button>Submit</button>\r\n                 </form>\r\n                 <h3>Indexes Seen:</h3>\r\n                 {this.renderSeenIndexes()}\r\n                 <h3>Calculated Values</h3>\r\n                 {this.renderValues()}\r\n             </div>\r\n             \r\n        );\r\n    }\r\n}\r\n\r\nexport default Fib;"]},"metadata":{},"sourceType":"module"}